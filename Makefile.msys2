#
# Makefile --
#
#       AutoLM Makefile for MSYS/Linux environment.
#
#

##
## Installation paths: 
##
##
INSTROOT = /usr/lib

##
## Commands:
##
CC	= gcc
CPP	= gcc
CP	= cp
RM	= rm
AR	= ar
LINK = /bin/sh /usr/bin/libtool --mode=link c++

##
## Definitions:
##
# need -DCURL_STATICLIB for static build
#EXTRAS = -ggdb -O0 -Wno-multichar                    -DWIN32 -D_MINGW -D_WINDOWS -D_UNIX -D_OPENSSL -DCURL_STATICLIB
EXTRAS = -O2 -Wno-multichar -fexpensive-optimizations -DWIN32 -D_MINGW -D_WINDOWS -D_UNIX -D_OPENSSL -DCURL_STATICLIB

CPPFLAGS = -Wall $(EXTRAS)
CFLAGS = -Wall $(EXTRAS)
INCLUDES = -I"." -I"./base"

## 
## Global Makefile settings
##

LIBAUTO = \
	base/sha1.o \
	base/md5.o \
	CompId.o \
	autolm.o

COMPID = \
	CompId.o

VALIDATE = \
	base/sha1.o \
	base/md5.o \
	CompId.o \
	autolm.o

TESTAPPLICATION = \
	./TestApplication/TestApplication.o

ACTIVATE = \
	base/sha1.o \
	base/md5.o \
	CompId.o \
	Activate.o

# Replace -lcurl below with custom build if desired
CURLLIB = -lcurl

# The name of library output file (static libautolm.a)
AUTOLIB = ./libautolm.so
COMPIDEXE = ./CompId.exe
ACTIVATEEXE = ./Activate.exe
VALIDATEEXE = ./Validate.exe
TESTAPPLICATIONEXE = ./TestApplication/TestApplication.exe

# Static build
#LDFLAGS = -fPIC -static
LDFLAGS = 
LIBS = -lstdc++
# These may be needed for static build, depending on curl install
#LIBS = -lcurl -lssl -lcrypto -lbrotlidec -lbrotlicommon -lnghttp2 \
#       -lpsl -lidn2 -liconv -lstdc++ -lz -lunistring

##
## Implicit Targets
##
.c.o:
	$(CC) -c $(CFLAGS) $(INCLUDES) -o $@ $<

.cpp.o:
	$(CPP) -c $(CPPFLAGS) $(INCLUDES) -o $@ $<

##
## Targets
##

##debug:
##CFLAGS = $(CFLAGS) -ggdb
##		CPPFLAGS = $(CPPFLAGS) -ggdb

all:		libauto compid validate testapplication activate

# To create a static library change this below
#	$(CPP) $(CPPFLAGS) -static \

#	-Wl,--whole-archive $(CURLLIB) -Wl,--no-whole-archive \

libauto: $(LIBAUTO)
	$(CPP) $(CPPFLAGS) -shared \
                -o $(AUTOLIB) \
                $(LIBAUTO) \
                $(CURLLIB) \
                $(LDFLAGS) $(LIBS)
	$(AR) rcs libautolm.a $(LIBAUTO)

compid: $(COMPID)
	$(CPP) -o $(COMPIDEXE) -D_WINDOWS -D_STANDALONE -Wno-multichar CompId.cpp \
                $(LIBS)

validate: $(VALIDATE)
	$(CPP) $(CPPFLAGS) $(INCLUDES) -o $(VALIDATEEXE) validate.cpp \
	            $(VALIDATE) \
                $(CURLLIB) $(LIBS)

testapplication: $(TESTAPPLICATION)
	$(CPP) $(CPPFLAGS) $(INCLUDES) -o $(TESTAPPLICATIONEXE) \
                 $(TESTAPPLICATION) \
                 -L. -lautolm $(CURLLIB) $(LIBS)

activate: $(ACTIVATE)
	$(CPP) $(CPPFLAGS) -D_CREATEONLY $(INCLUDES) -o $(ACTIVATEEXE) autolm.cpp \
	               $(ACTIVATE) $(LIBS)


# For libcurl static, remaning shared
#				-Wl,--whole-archive \
#				$(LIBAUTO) $(CURLLIB) \
#				-Wl,--no-whole-archive \

clean:
	$(RM) *.o
	$(RM) ./base/*.o
	$(RM) libautolm.so
	$(RM) libautolm.a
	$(RM) compid.exe
	$(RM) activate.exe
	$(RM) validate.exe
	$(RM) ./TestApplication/*.o
	$(RM) ./TestApplication/TestApplication.exe

##
